% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/bias-statsw.R
\name{bias_statsw}
\alias{bias_statsw}
\title{Calculate bias statistics from simple list of rasters of spatial errors}
\usage{
bias_statsw(ref, awgts, rerror, evalnm, fun, stnm = "st", rnd = 2,
  rweight = TRUE, aweight = TRUE, trim_wgt = TRUE)
}
\arguments{
\item{ref}{Raster containing reference weights}

\item{awgts}{Raster defining area weights, for aggregation}

\item{rerror}{List of error rasters}

\item{evalnm}{Name of value encoded in reval's cells (for column header)}

\item{fun}{Function to evaluate--should be able to handle weights}

\item{stnm}{Name of statistic (for output column header)}

\item{rnd}{Rounding value to apply to statistic}

\item{rweight}{Apply reference weighting or not}

\item{aweight}{Apply area weighting or not}

\item{trim_wgt}{Remove column of weights from output table}
}
\value{
A data.table of output statistics under evalnm
}
\description{
A variant of bias_stats in which error can be doubly weighted,
singly weighted, or not at all
}
\details{
This can calculate weighted or unweighted statistics
}
\examples{
double weighting, proof
a <- c(1, 0.5)
w1 <- c(0.5, 1)
w2 <- c(1, 0.5)
sum(a * (w1 * w2) / sum(w1 * w2)) == mean(a)  # equal to straight mean

# equal to weighted.mean
a <- c(1, 0.5)
w1 <- c(0.5, 1)
# w2 <- c(1, 1)
w2 <- c(2, 2)
sum(a * (w1 * w2) / sum(w1 * w2)) == weighted.mean(a, w1)

# toy data
ref <- rerror <- awgts <- raster(nrow = 10, ncol = 10)
ref[] <- runif(ncell(ref))
rerror[] <- runif(ncell(ref))
rerror <- rerror - ref
names(rerror) <- "rerror"
awgts[] <- sample(5:10, size = ncell(ref), replace = TRUE)
wm <- function(x, w) stats::weighted.mean(x, w)
# no weight by ref, check against raster version
bias_statsw(ref, awgts, rerror, fun = wm, evalnm = "rerror",
           rweight = FALSE, rnd = 4) ==
 round(weighted.mean(getValues(rerror), getValues(awgts)), 4)

# no weight by area, check against raster version
bias_statsw(ref, awgts, rerror, fun = wm, evalnm = "rerror", aweight = FALSE,
            rnd = 4) ==
  round(weighted.mean(getValues(rerror), getValues(ref)), 4)

# double weighted, check against raster version
bias_statsw(ref, awgts, rerror, fun = wm, evalnm = "rerror", rnd = 4) ==
  round(weighted.mean(getValues(rerror), getValues(ref) * getValues(awgts)), 4)

# no weights, check against raster version
bias_statsw(ref, awgts, rerror, fun = wm, evalnm = "rerror", rweight = FALSE,
            aweight = FALSE, rnd = 4) == round(cellStats(rerror, mean), 4)

# check behavior with a sum
bias_statsw(ref, awgts, rerror, fun = sum, evalnm = "rerror", rweight = FALSE,
            aweight = FALSE, rnd = 4) ==
  bias_statsw(ref, awgts, rerror, fun = sum, evalnm = "rerror", rnd = 4)
bias_statsw(ref, awgts, rerror, fun = sum, evalnm = "rerror", rnd = 4) ==
  round(cellStats(rerror, sum), 4)
}

